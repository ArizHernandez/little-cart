{"version":3,"sources":["components/Cart/CartItem.module.css","components/UI/Notification.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/UI/Notification.js","components/Shop/ProductItem.js","components/Shop/Products.js","store/cartActions.js","App.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItem","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItem","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","button","badge","MainHeader","header","Layout","Notification","specialClasses","error","success","cssClasses","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","url","isInitial","App","isVisible","ui","useEffect","a","fetchData","fetch","response","json","data","cartData","sendRequest","method","body","JSON","stringify","ok","Error","sentCartData","store","configureStore","reducer","cartReducer","uiReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.906c47d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2Kn8D\",\"details\":\"CartItem_details__Mzd__\",\"quantity\":\"CartItem_quantity__1pUuY\",\"price\":\"CartItem_price__1n1g6\",\"itemprice\":\"CartItem_itemprice__2DV8g\",\"actions\":\"CartItem_actions__-U-F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3MSm7\",\"error\":\"Notification_error__3NwOe\",\"success\":\"Notification_success__2KxnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__283JF\",\"price\":\"ProductItem_price__1PBFo\",\"actions\":\"ProductItem_actions__8njNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3F-F2\",\"badge\":\"CartButton_badge__1pXfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3aMu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1RSKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__e5lZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3ZY5-\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { items: [], totalQuantity: 0, changed: false };\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;\n\n// https://react-http-ar-default-rtdb.firebaseio.com/\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart\";\n\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, quantity, total, price, id } = props.item;\n\n  const increaseItemHandler = () => {\n    dispatch(\n      cartActions.addItem({\n        id,\n        price,\n        quantity,\n        name: title,\n        totalPrice: total,\n      })\n    );\n  };\n\n  const decreaseItemHandler = () => {\n    dispatch(cartActions.removeItem(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decreaseItemHandler}>-</button>\n          <button onClick={increaseItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const items = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { cartIsVisible: false, notification: null };\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState,\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui\";\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button onClick={toggleCartHandler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItem({\n        id,\n        title,\n        quantity: 1,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"First Book I wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 12,\n    title: \"My Second Book\",\n    description: \"Second Book I wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import { uiActions } from \"./ui\";\nimport { cartActions } from \"./cart\";\n\nconst url = \"https://react-http-ar-default-rtdb.firebaseio.com/cart.json\";\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n\n      dispatch(\n        cartActions.replaceCart({\n          totalQuantity: cartData.totalQuantity || 0,\n          items: cartData.items || [],\n        })\n      );\n    } catch (err) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: err.message,\n        })\n      );\n    }\n  };\n};\n\nexport const sentCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Loading...\",\n        message: \"Sending Cart Data.\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          totalQuantity: cart.totalQuantity,\n          items: cart.items,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent Cart data successfully!\",\n        })\n      );\n    } catch (err) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: err.message,\n        })\n      );\n    }\n  };\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Notification from \"./components/UI/Notification\";\nimport Products from \"./components/Shop/Products\";\nimport { sentCartData, fetchData } from \"./store/cartActions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isVisible = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sentCartData(cart));\n    }\n\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {isVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cart\";\nimport uiReducer from \"./ui\";\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    ui: uiReducer,\n  },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}